name: Build Image

on:
  push:
    tags:
      - 'v*.*.*'
      - 'latest'
  pull_request:
    branches:
      - 'master'
      - 'main'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
     - name: Checkout Code
       uses: actions/checkout@v4
       with:
         fetch-depth: 0

     - name: Setup Python
       uses: actions/setup-python@master
       with:
         python-version: 3.11.4

     - name: Generate coverage report
       run: |
         pip install poetry
         poetry install
         coverage run -m pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-Linter
        uses: super-linter/super-linter@v5.7.2
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON: true
          VALIDATE_DOCKERFILE_HADOLINT: false

  build:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Meta
        id: meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=ref,event=pr

      - name: Inspect Tags
        run: echo "${{ steps.meta.outputs.tags }}"

      - name: Inspect Labels
        run: echo "${{ steps.meta.outputs.labels }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Build and push Docker images
#        uses: docker/build-push-action@v5.1.0
#        with:
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          push: false
#          platforms: linux/amd64, linux/arm64, linux/arm/v7
